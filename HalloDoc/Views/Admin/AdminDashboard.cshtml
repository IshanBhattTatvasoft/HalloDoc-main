@model HalloDoc.DataLayer.ViewModels.AdminDashboardTableView
@{
    ViewData["Title"] = "AdminDashboard";
}
@section Styles {
    <link href="~/css/admin-dashboard.css" rel="stylesheet" type="text/css" />
    <style>
        textarea {
            resize: none !important;
        }

        .chat-messages {
            list-style-type: none;
            padding: 0;
            margin: 5px;
        }

        *::-webkit-scrollbar {
            width: 9px;
        }

        *::-webkit-scrollbar-track {
            background: #fcfcfc;
        }

        *::-webkit-scrollbar-thumb {
            background-color: #5a6263;
            border-radius: 10px;
            border: 3px solid #ffffff;
        }

        .chat-message {
            padding: 10px 10px;
            margin-bottom: 5px;
            border-bottom-left-radius: 8px;
        }

        .outgoing {
            background-color: #dcf8c640;
            border: 2px solid #eaeaea94;
            width: max-content;
            align-self: flex-end;
        }

        .incoming {
            background-color: #e4faff;
            border: 2px solid #d6eaff;
            width: max-content;
            align-self: flex-start;
        }

        .timeOnLeft {
            align-self: flex-start;
        }

        .timeOnRight {
            align-self: flex-end;
        }
    </style>
}

@section Scripts {
    <script type="text/javascript" src="https://unpkg.com/xlsx@0.15.1/dist/xlsx.full.min.js"></script>
    <partial name="_ValidationScriptsPartial" />
}

<div class="me-1 ms-1 main-body">

    @* Partial view of toaster and header *@
    <partial name="Toast" />
    <partial name="HeaderFooter" model="@Model.an" />



    <div id="main-sub-div" class="tabcontent">
        <!-- boxes of 6 states -->
        <div class="row mt-5">

            <a class="col-4 col-lg-2 custom-btn cursor-pointer" style="text-decoration: none;">
                <div class="state newState newState-active ms-1" onclick="changeStatus(this)">
                    <div class="d-flex align-items-center state-sub-div">
                        <img src="~/images/new.svg" id="newState" class="icon-size hide pe-1">
                        <img src="~/images/new_active.png" id="newState-active" class="icon-size pe-1">
                        <!-- <img src="./images/new_active.png" alt="" id="activeImage"> -->
                        <span class="title-sub-div">NEW</span>
                    </div>
                    <span class="state-count">@Model.new_count</span>
                </div>

                <img src="~/images/caret-down-fill.svg" id="newState-img" class="caret">
            </a>
            <a class="col-4 col-lg-2 custom-btn" style="text-decoration: none;">
                <div class="state pendingState ms-2" onclick="changeStatus(this)">
                    <div class="d-flex align-items-center state-sub-div">
                        <img src="~/images/pending.svg" id="pendingState" class="icon-size pe-1">
                        <img src="~/images/pending_active.png" id="pendingState-active" class="icon-size hide pe-1">
                        <span class="title-sub-div">PENDING</span>
                    </div>
                    <span class="state-count">@Model.pending_count</span>
                </div>
                <img src="~/images/caret-down-fill1.svg" id="pendingState-img" class="caret hide-caret" />
            </a>
            <a class="col-4 col-lg-2 custom-btn" style="text-decoration: none;">
                <div class="state activeState ms-2" onclick="changeStatus(this)">
                    <div class="d-flex align-items-center state-sub-div">
                        <img src="~/images/active.svg" id="activeState" class="icon-size pe-1">
                        <img src="~/images/active_active.png" id="activeState-active" class="icon-size hide pe-1">
                        <span class="title-sub-div">ACTIVE</span>
                    </div>
                    <span class="state-count">@Model.active_count</span>
                </div>
                <img src="~/images/caret-down-fill2.svg" id="activeState-img" class="caret hide-caret" />
            </a>
            <a class="col-4 col-lg-2 custom-btn lower-three-button" style="text-decoration: none;" id="conclude-state" onclick="changeStyle()">
                <div class="state concludeState ms-2" onclick="changeStatus(this)">
                    <div class="d-flex align-items-center state-sub-div">
                        <img src="~/images/conclude.svg" id="concludeState" class="icon-size pe-1">
                        <img src="~/images/conclude_active.png" id="concludeState-active" class="icon-size hide pe-1">
                        <span class="title-sub-div">CONCLUDE</span>
                    </div>
                    <span class="state-count">@Model.conclude_count</span>
                </div>
                <img src="~/images/caret-down-fil3.svg" id="concludeState-img" class="caret hide-caret" />
            </a>
            @if (Model.an.roleName == "Admin")
            {
                <a class="col-4 col-lg-2 custom-btn lower-three-button" style="text-decoration: none;" id="to-close-state" onclick="changeStyle()">
                    <div class="state tocloseState ms-2" onclick="changeStatus(this)">
                        <div class="d-flex align-items-center state-sub-div">
                            <img src="~/images/toclose.svg" id="tocloseState" class="icon-size pe-1">
                            <img src="~/images/toclose_active.png" id="tocloseState-active" class="icon-size hide pe-1">
                            <span class="title-sub-div" id="to-close-text">TO CLOSE</span>
                        </div>
                        <span class="state-count">@Model.toclose_count</span>
                    </div>
                    <img src="~/images/caret-down-fill4.svg" id="tocloseState-img" class="caret hide-caret" />
                </a>
                <a class="col-4 col-lg-2 custom-btn lower-three-button" style="text-decoration: none;" id="unpaid-state" onclick="changeStyle()">
                    <div class="state unpaidState ms-2" onclick="changeStatus(this)">
                        <div class="d-flex align-items-center state-sub-div">
                            <img src="~/images/unpaid.svg" id="unpaidState" class="icon-size pe-1">
                            <img src="~/images/unpaid_active.png" id="unpaidState-active" class="icon-size hide pe-1">
                            <span class="title-sub-div">UNPAID</span>
                        </div>
                        <span class="state-count">@Model.unpaid_count</span>
                    </div>
                    <img src="~/images/caret-down-fill5.svg" id="unpaidState-img" class="caret hide-caret" />
                </a>
            }
        </div>
        <!-- Patient (new) and 5 buttons row -->

        <div class="mt-5 ps-4 pe-4 dashboard-sub-div">
            <h4 class="patient-title ms-3">Patients <span id="status-text">(New)</span></h4>
            @* Five blue buttons on right side of the row *@
            <div class="rounded d-flex">
                <button class="five-blue-buttons" data-bs-toggle="modal" data-bs-target="#sendLinkModal">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="white"
                         class="bi bi-send dashboard-sub-div-icon" id="sub-div-icon-1" viewBox="0 0 16 16">
                        <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576zm6.787-8.201L1.591 6.602l4.339 2.76z" />
                    </svg>
                    <p class="five-blue-buttons-text me-2" style="padding-left: 14px; margin-top: -20px !important;">Send Link</p>
                </button>
                <a class="five-blue-buttons" asp-action="CreateRequest" asp-controller="Admin">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="white"
                         class="bi bi-journal-medical dashboard-sub-div-icon mt-2" viewBox="0 0 16 16">
                        <path fill-rule="evenodd"
                              d="M8 4a.5.5 0 0 1 .5.5v.634l.549-.317a.5.5 0 1 1 .5.866L9 6l.549.317a.5.5 0 1 1-.5.866L8.5 6.866V7.5a.5.5 0 0 1-1 0v-.634l-.549.317a.5.5 0 1 1-.5-.866L7 6l-.549-.317a.5.5 0 0 1 .5-.866l.549.317V4.5A.5.5 0 0 1 8 4M5 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5" />
                        <path d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2" />
                        <path d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1z" />
                    </svg>
                    <p class="five-blue-buttons-text me-2" style="padding-left: 13px; margin-top: -20px !important;">Create Requests</p>
                </a>
                @if (Model.an.roleName == "Admin")
                {
                    <button class="five-blue-buttons" id="downloadExcelButton" onclick="downloadSpecificExcel()">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="white"
                             class="bi bi-arrow-up-right dashboard-sub-div-icon" viewBox="0 0 16 16">
                            <path fill-rule="evenodd"
                                  d="M14 2.5a.5.5 0 0 0-.5-.5h-6a.5.5 0 0 0 0 1h4.793L2.146 13.146a.5.5 0 0 0 .708.708L13 3.707V8.5a.5.5 0 0 0 1 0z" />
                        </svg>
                        <span class="five-blue-buttons-text me-2">Export</span>
                    </button>
                    <a class="five-blue-buttons" asp-action="DownloadAll" asp-controller="Admin" style="text-decoration: none;">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="white"
                             class="bi bi-box-arrow-up-right dashboard-sub-div-icon mt-2" viewBox="0 0 16 16">
                            <path fill-rule="evenodd"
                                  d="M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5" />
                            <path fill-rule="evenodd"
                                  d="M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0z" />
                        </svg>
                        <p class="five-blue-buttons-text me-2 mt-3" style="margin-top: -20px !important;
                       padding-left: 10px;">Export All</p>
                    </a>
                    <button type="button" class="five-blue-buttons me-4" data-bs-toggle="modal" data-bs-target="#requestSupportModal">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="white"
                             class="bi bi-person-plus dashboard-sub-div-icon" viewBox="0 0 16 16">
                            <path d="M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z" />
                            <path fill-rule="evenodd"
                                  d="M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5" />
                        </svg>
                        <span class="five-blue-buttons-text me-2">Request DTY Support</span>
                    </button>
                }
            </div>
        </div>

        @* Div for search, region dropdown and all 5 types of buttons (all, patient, family, business and concierge) *@
        <div class="dashboard-sub-div-2 mt-4 ms-3 me-3">
            <div class="d-flex justify-content-between align-items-center flex-row mb-3 dashboard-sub-div-2-sub">
                <div class="search-div mt-3 gap-2 d-md-flex d-block">
                    <div class="search-div-sub input-group h-50 mb-2">
                        <input type="text" id="search" class="form-control search-input"
                               placeholder="Search Patients" style="border: none !important;" onkeyup="filter()">
                    </div>
                    <div class="search-div-sub-2 input-group h-50">
                        <select type="text" id="region" class="form-control" placeholder="All Regions" style="border: none !important;" onchange="filter()">
                            <option value="-1" class="bg-white" selected>All Regions</option>
                            @foreach (var item in Model.regions)
                            {
                                <option value="@item.RegionId" class="bg-white">@item.Name</option>
                            }
                        </select>
                    </div>

                </div>

                <div class="categories-div d-md-flex d-block gap-2 align-items-center">
                    <a class="req-filter All filter-active categories-div-all-button btn border border-dark-subtle mt-3 d-md-inline-block d-none text-decoration-none" onclick="changeFilter(this)">All</a>
                    <div class="d-flex align-items-center justify-content-center gap-2">

                        <div class="d-flex align-items-center justify-content-center mt-3 gap-2">
                            <a class="req-filter Patient btn border border-white categories-div-sub d-sm-flex align-items-center gap-1 text-decoration-none" onclick="changeFilter(this)">
                                <div class="categories-div-sub-sub"
                                     style="height:1rem; width:1rem;border-radius:50%;background:#61B961;"></div>
                                <div>Patient</div>
                            </a>
                            <a class="req-filter Family btn border border-white categories-div-sub d-sm-flex align-items-center gap-1 text-decoration-none" onclick="changeFilter(this)">
                                <div class="categories-div-sub-sub"
                                     style="height:1rem; width:1rem;border-radius:50%;background:#E69127;"></div>
                                <div>Family/Friend</div>
                            </a>
                            <a class="req-filter Business btn border border-white categories-div-sub d-sm-flex align-items-center gap-1 text-decoration-none" onclick="changeFilter(this)">
                                <div class="categories-div-sub-sub"
                                     style="height:1rem; width:1rem;border-radius:50%;background:#D9677C;"></div>
                                <div>Business</div>
                            </a>
                            <a class="req-filter Concierge btn border border-white categories-div-sub d-sm-flex align-items-center gap-1 text-decoration-none" onclick="changeFilter(this)">
                                <div class="categories-div-sub-sub"
                                     style="height:1rem; width:1rem;border-radius:50%;background:#0A7CB8;"></div>
                                <div>Concierge</div>
                            </a>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        @* div to show output of partial view *@
        <div>
            <div id="loader2" class="loader2">
                <span></span>
                <span></span>
                <span></span>
                <span></span>
            </div>
            <div class="mt-4 ms-3 me-3 myTable" id="AdminDashboardPartialView"></div>
        </div>
    </div>

    @* Cancel case modal *@
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h5 class="modal-title text-white" id="exampleModalLabel">
                        Confirm Cancellation
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="requestForm" method="post" asp-action="CancelCase" asp-controller="Admin" onsubmit="checkCancelCase()">

                        <input type="number" hidden asp-for="RequestId" id="r-id" />

                        <p class="mb-3 text-muted">Patient Name: <span class="text-info fw-bold" id="p-name"></span></p>

                        <div class="dropdown text-light mb-3 w-100">
                            <select class="btn border border-info dropdown-toggle text-secondary w-100" id="reason" style="text-align:start" data-bs-toggle="dropdown" aria-expanded="false" class="bg-white" name="selectedCaseTagId">
                                <i class="bi bi-person"></i> Reason For Cancellation
                                <option value="-1" class="bg-white">Select reason for cancellation</option>
                                @foreach (var item in Model.caseTags)
                                {
                                    <option value="@item.CaseTagId" class="bg-white">@item.Name</option>
                                }
                            </select>
                            <span class="text-danger" id="caseTagError" style="display: none;"></span>
                        </div>

                        <div class="form-group">
                            <textarea class="form-control border border-info" id="exampleFormControlTextarea1" placeholder="Providers additional Notes" rows="5" name="additionalNotes" asp-for="cancelCaseNotes"></textarea>
                            <span asp-validation-for="cancelCaseNotes"></span>
                        </div>

                        <div class="text-end mb-3 me-3 mt-3">
                            <button type="submit" class="btn btn-info text-white" id="continueBtn">Confirm</button>
                            <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </form>

                </div>
            </div>
        </div>
    </div>


    @* Send Link Modal *@
    <div class="modal fade " id="sendLinkModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="exampleModalLabel20" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h4 class="modal-title fs-5 text-white" id="exampleModalLabel20">Send mail to patient for submitting the request</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <form method="post" asp-action="SendLink" asp-controller="Admin">

                        <div class="col-sm-12 ">
                            <div class="form-floating mb-3">
                                <input asp-for="FirstName" id="slfn" type="text" class="form-control" placeholder="First Name" value="" required>
                                <label for="floatingInput">First Name</label>
                                <span asp-validation-for="FirstName" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-sm-12 ">
                            <div class="form-floating mb-3">
                                <input asp-for="LastName" id="slln" type="text" class="form-control" placeholder="Last Name" value="" required>
                                <label for="floatingInput">Last Name</label>
                                <span asp-validation-for="LastName" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-sm-12 ">
                            <div class="form-floating mb-3">
                                <input id="slphone" class="form-control" type="tel" value="" asp-for="PhoneNumber" required />
                                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-floating mb-3">
                                <input asp-for="email" id="slemail" type="email" class="form-control" placeholder="Email" value="" required>
                                <label for="floatingInput">Email</label>
                                <span asp-validation-for="email" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="submit" class="btn btn-info text-white">Send</button>
                            <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">Cancel</button>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>


    @* Assign Request Modal *@
    <div class="modal fade" id="example2Modal" tabindex="-1" aria-labelledby="exampleModal2Label" aria-hidden="true" data-backdrop="static">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h5 class="modal-title text-white" id="exampleModal2Label">
                        Assign Request
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="requestForm" method="post" asp-action="AssignCaseSubmitAction" asp-controller="Admin" onsubmit="validateForm()">
                        <input type="number" hidden asp-for="RequestId" id="r-id-two" />
                        <p class="mb-3 text-muted fs-4">To assign this request, search and select another Physician</p>
                        <div class="dropdown text-light mb-3 w-100">
                            <select class="btn border border-info dropdown-toggle text-secondary bg-white w-100" style="text-align:start" data-bs-toggle="dropdown" aria-expanded="false" name="RegionId" id="select-region" onchange="fetchRegionData()" required>
                                <option value="-1" selected disabled><i class="bi bi-person"></i> Narrow Search by Region</option>
                                @foreach (var item in Model.regions)
                                {
                                    <option value="@item.RegionId" class="bg-white">@item.Name</option>
                                }
                            </select>
                            <span id="regionError" class="text-danger" style="display: none;"></span>
                        </div>
                        <div class="dropdown text-light mb-3 w-100">
                            <select class="btn border border-info dropdown-toggle text-secondary w-100 bg-white" style="text-align:start" data-bs-toggle="dropdown" aria-expanded="false" name="selectedPhysicianId" id="select-physician" required>
                                <option value="-1" selected disabled><i class="bi bi-person"></i> Select Physician</option>
                            </select>
                            <span id="physicianError" class="text-danger" style="display: none;"></span>
                        </div>
                        <div class="form-group">
                            <textarea class="form-control border border-info" id="exampleFormControlTextarea1" placeholder="Description" rows="5" name="assignCaseDescription"></textarea>
                        </div>
                        <div class="text-end mb-3 me-3 mt-3">
                            <button type="submit" class="btn btn-info text-white" id="continueBtn">Confirm</button>
                            <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">
                                Cancel
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>



    @* Transfer Request Modal *@
    <div class="modal fade" id="example9Modal" tabindex="-1" role="dialog" aria-labelledby="exampleModal9Label" aria-hidden="true" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h5 class="modal-title text-white" id="exampleModal9Label">
                        Transfer Request
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="requestForm" method="post" asp-action="TransferCaseSubmitAction" asp-controller="Admin" onsubmit="checkTransfer()">
                        <input type="number" hidden asp-for="RequestId" id="r-id-four" />
                        <p class="mb-3 text-muted fs-4">To transfer this request, search and select another physician</p>
                        <div class="dropdown text-light mb-3 w-100">
                            <select class="btn border border-info dropdown-toggle text-secondary w-100 bg-white" style="text-align:start" data-bs-toggle="dropdown" aria-expanded="false" name="RegionId" id="select-region-for-transfer" onchange="fetchRegionData2()" required>
                                <option value="-1" selected disabled><i class="bi bi-person"></i> Narrow Search by Region</option>
                                @foreach (var item in Model.regions)
                                {
                                    <option value="@item.RegionId" class="bg-white">@item.Name</option>
                                }
                            </select>
                            <span id="regionError2" class="text-danger" style="display: none;"></span>
                        </div>
                        <div class="dropdown text-light mb-3 w-100">
                            <select class="btn border border-info dropdown-toggle text-secondary w-100" style="text-align:start" data-bs-toggle="dropdown" aria-expanded="false" class="bg-white" name="selectedPhysicianId" id="select-physician2" required>
                                <option value="-1" selected disabled><i class="bi bi-person"></i> Select Physician</option>
                            </select>
                            <span id="physicianError2" class="text-danger" style="display: none;"></span>
                        </div>
                        <div class="form-group">
                            <textarea class="form-control description border border-info" id="exampleFormControlTextarea1" placeholder="Description" rows="5" name="assignCaseDescription"></textarea>
                        </div>
                        <div class="text-end mb-3 me-3 mt-3">
                            <button type="submit" class="btn btn-info text-white" id="continueBtn">Confirm</button>
                            <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">
                                Cancel
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>



    @* Block Case Modal *@
    <div class="modal fade" id="example3Modal" tabindex="-1" aria-labelledby="exampleModal3Label" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h5 class="modal-title text-white" id="exampleModal3Label">
                        Confirm Block
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="requestForm" method="post" asp-action="BlockCase" asp-controller="Admin" onsubmit="checkBlockCase()">
                        <input type="number" hidden asp-for="RequestId" id="r-id-three" />
                        <p class="mb-3 text-muted">Patient Name: <span class="text-info fw-bold" id="p-name-two"></span></p>
                        <div class="form-group">
                            <textarea class="form-control border border-info" id="blockReason" placeholder="Reason for Block Request" rows="5" name="reasonForBlockRequest"></textarea>
                            <span class="text-danger" id="blockError" style="display: none;"></span>
                        </div>

                        <div class="text-end mb-3 me-3 mt-3">
                            <button type="submit" class="btn btn-info text-white" id="continueBtn">Confirm</button>
                            <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">
                                Cancel
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>



    @* Clear Case Modal *@
    <div id="example10Modal" class="modal fade" tabindex="-1" aria-labelledby="exampleModal10Label" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body d-flex flex-column justify-content-center align-items-center mt-5">
                    <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="#FFD43B" class="bi bi-exclamation-circle-fill mb-2 yellow-warning" viewBox="0 0 16 16" style="border: 2px solid #FFD43B;padding: 10px;border-radius: 50%;">
                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4m.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2" />
                    </svg>
                    <h3>Confirmation for clear case</h3>
                    <p>
                        Are you sure you want to clear this request? Once clear this request then you are not able to see the request
                    </p>
                    <form id="requestForm" method="post" asp-action="ClearCaseSubmitAction" asp-controller="Admin">
                        <input type="number" asp-for="RequestId" hidden id="r-id-five" />
                        <button type="submit" class="btn btn-info text-white" id="continueBtn">Confirm</button>
                        <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">Cancel</button>
                    </form>
                </div>
            </div>
        </div>
    </div>



    @* Send Agreement Modal *@
    <div class="modal fade" id="SendAgreementModal" tabindex="-1" aria-labelledby="SendAgreementModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h5 class="modal-title text-white" id="SendAgreementModalLabel">
                        Send Agreement
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="requestForm" method="post" asp-action="SendMailOfAgreement" asp-controller="Admin">
                        <input type="number" hidden asp-for="RequestId" id="r-id-for-agree" />
                        <input type="number" hidden id="r-type-id-two" />
                        <div id="patient-data" style="display: none;">
                            <div class="categories-div-sub-sub"
                                 style="height:1rem; width:1rem;border-radius:50%;background:#61B961;"></div>
                            <span>Patient</span>
                        </div>
                        <div id="family-data" style="display: none;">
                            <div class="categories-div-sub-sub"
                                 style="height:1rem; width:1rem;border-radius:50%;background:#E69127;"></div>
                            <span>Family</span>
                        </div>
                        <div id="business-data" style="display: none;">
                            <div class="categories-div-sub-sub"
                                 style="height:1rem; width:1rem;border-radius:50%;background:#D9677C;"></div>
                            <span>Business</span>
                        </div>
                        <div id="concierge-data" style="display: none;">
                            <div class="categories-div-sub-sub"
                                 style="height:1rem; width:1rem;border-radius:50%;background:#0A7CB8;">
                            </div>
                            <span style="margin-top: -5px !important;">Concierge</span>
                        </div>
                        <p class="h5 mb-3 text-muted mt-2">To send agreement, please make sure you are updating the correct contact information below for the responsible party</p>
                        <div class="form-floating text-light mb-3 w-100">
                            <input type="tel" id="phoneForAgree" class="form-control" asp-for="phoneNo" />
                            <label for="floatingInput" class="ms-2 text-muted">Phone Number</label>
                            <span asp-validation-for="phoneNo" class="text-danger"></span>
                        </div>
                        <div class="form-floating text-light mb-3 w-100">
                            <input type="text" id="emailForAgree" class="form-control" asp-for="sendAgreeEmail" />
                            <label for="floatingInput" class="ms-2 text-muted">Email</label>
                            <span asp-validation-for="sendAgreeEmail" class="text-danger"></span>
                        </div>
                        <div class="text-end mb-3 me-3 mt-3">
                            <button type="submit" class="btn btn-info text-white" id="continueBtn">Send</button>
                            <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">
                                Cancel
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>


    @* Request DTY Support / Request Support Modal *@
    <div class="modal fade" id="requestSupportModal" tabindex="-1" aria-labelledby="requestSupportModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h1 class="modal-title fs-5 text-white" id="requestSupportModalLabel">Request Support</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form method="post" asp-action="RequestDtySupport" asp-controller="Admin" onsubmit="checkDTY()">
                    <div class="modal-body">
                        <span>To all unscheduled physicians: We are short on coverage and needs additional support on call to respond to requests.</span>

                        <div class="form-group">
                            <textarea class="form-control border border-muted mt-3 textarea-class" id="reasonDTY" placeholder="Message" rows="5" name="reason" asp-for="requestDTY"></textarea>
                            <span class="text-danger" id="dtyError" style="display: none;"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-info text-white">Send</button>
                        <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    @*Provider Dashboard - Accept Case Modal*@
    <div class="modal fade" id="acceptCaseModal" tabindex="-1" aria-labelledby="acceptCaseModal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h1 class="modal-title fs-5 text-white" id="acceptCaseModal">Accept Case</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form method="post" asp-action="AcceptCase" asp-controller="Admin">
                    <input type="hidden" id="r-id-six" asp-for="RequestId" />
                    <div class="modal-body">
                        Are you sure you want to accept this case?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">No</button>
                        <button type="submit" class="btn btn-info">Yes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    @*Provider Dashboard - Transfer Modal*@
    <div class="modal fade" id="providerTransferModal" tabindex="-1" aria-labelledby="providerTransferModal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h1 class="modal-title fs-5" id="providerTransferModal">Transfer Request</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form method="post" asp-action="ProviderTransferRequest" asp-controller="Admin" onsubmit="transferValidation()">
                    <input type="hidden" id="r-id-seven" asp-for="RequestId" />
                    <div class="modal-body">
                        <textarea class="form-control border border-info" id="transferDesc" placeholder="Description" rows="5" name="additionalNotes" asp-for="providerTransferDescription" required onkeyup="transferValidation()"></textarea>
                        <span id="descError" class="text-danger" style="display: none;">Enter the reason</span>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-info">Submit</button>
                        <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    @*Provider Dashboard - Type of Care Modal*@
    <div class="modal fade" id="typeOfCareModal" tabindex="-1" aria-labelledby="typeOfCareModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h5 class="modal-title text-white" id="typeOfCareModalLabel">
                        Select Type Of Care
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-action="SaveCallType" asp-route-id="@Model.RequestId" asp-controller="Admin" onsubmit="validateAndSubmit()">
                        <input type="hidden" id="r-id-eight" name="requestid" value="" asp-for="RequestId" />
                        <div class="d-flex justify-content-center gap-3">
                            <div>
                                <input type="radio" class="btn-check" name="Calltype" id="Housecall-outlined" value="1" autocomplete="off">
                                <label class="btn btn-outline-info" for="Housecall-outlined">HouseCall</label>

                                <input type="radio" class="btn-check" name="Calltype" id="info-outlined" value="2" autocomplete="off">
                                <label class="btn btn-outline-info" for="info-outlined">Consult</label>
                            </div>
                        </div>

                        <div id="typeOfCareError" class="text-danger" style="display: none;">Please select a type of care.</div>

                        <div class="text-end mb-3 me-3 mt-3">
                            <button type="submit" class="btn btn-info text-white" id="continueBtn" data-bs-dismiss="modal">Save</button>
                            <button type="button" class="btn btn-outline-info" data-bs-dismiss="modal">
                                Cancel
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @*Encounter Form Finalized Modal*@
    <div class="modal fade" id="DownloadEncounterModal" tabindex="-1" aria-labelledby="DownloadEncounterModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-info">
                    <h5 class="modal-title text-white" id="DownloadEncounterModalLabel">
                        Encounter Form
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @*<form id="requestForm" method="post" asp-action="DownloadEncounterForm" asp-controller="Admin">*@
                    <input type="hidden" id="r-id-nine" name="requestid" value="" />
                    <p class="mb-3 text-muted">Encounter Form Finalized Successfully</p>
                    <div class="d-flex justify-content-center">
                        <a type="button" class="btn btn-info text-white" id="pdf" href="" download>Download</a>
                    </div>
                    @*</form>*@
                </div>
            </div>
        </div>
    </div>


    <script>

        var curr_state = "All";

        const designStatus = (name2) => {
            const states = document.getElementsByClassName("state");
            const current_state = name2 + "State";
            console.log("Current state designStatus: " + name2);

            for (let i = 0; i < states.length; ++i) {

                if (states[i].classList.length == 4 && states[i].classList[1] == current_state) {
                    break;
                }
                else if (states[i].classList[1] == current_state) {
                    states[i].classList.add(`${states[i].classList[1]}-active`)
                    document.getElementById(`${states[i].classList[1]}-active`).classList.remove('hide')
                    document.getElementById(`${states[i].classList[1]}`).classList.add('hide')
                    document.getElementById(`${states[i].classList[1]}-img`).classList.remove('hide-caret');
                }
                else if (states[i].classList.length == 4) {
                    states[i].classList.remove(`${states[i].classList[1]}-active`);
                    document.getElementById(`${states[i].classList[1]}-active`).classList.add('hide');
                    document.getElementById(`${states[i].classList[1]}`).classList.remove('hide');
                    //console.log(document.getElementById(`${states[i].classList[1]}`));
                    document.getElementById(`${states[i].classList[1]}-img`).classList.add('hide-caret');
                }
            }
            let name = name2.split("-").length == 1 ? name2.split("-")[0] : name2.split("-")[1]
            document.getElementById("status-text").innerHTML = `(${name.charAt(0).toUpperCase() + name.slice(1)})`
        }

        // code to show/hide triangle when a status is active/inactive
        const changeStatus = (element) => {
            const states = document.getElementsByClassName("state");
            const current_state = element.classList[1];
            console.log("Current state " + current_state);
            for (let i = 0; i < states.length; ++i) {
                console.log("Class name of class " + i + " : " + states[i].classList[1]);
                if (states[i].classList.length == 4 && states[i].classList[1] == current_state) {
                    break;
                }
                else if (states[i].classList[1] == current_state) {
                    states[i].classList.add(`${states[i].classList[1]}-active`);
                    document.getElementById(`${states[i].classList[1]}-active`).classList.remove('hide');
                    document.getElementById(`${states[i].classList[1]}`).classList.add('hide');
                    //console.log(document.getElementById(`${states[i].classList[1]}`));
                    document.getElementById(`${states[i].classList[1]}-img`).classList.remove('hide-caret');
                    let name = current_state.split("-").length == 1 ? current_state.split("-")[0] : current_state.split("-")[1];
                    let finalName = name.split("State")[0];
                    localStorage.setItem("status", finalName);
                }
                else if (states[i].classList.length == 4) {
                    states[i].classList.remove(`${states[i].classList[1]}-active`);
                    document.getElementById(`${states[i].classList[1]}-active`).classList.add('hide');
                    document.getElementById(`${states[i].classList[1]}`).classList.remove('hide');
                    //console.log(document.getElementById(`${states[i].classList[1]}`));
                    document.getElementById(`${states[i].classList[1]}-img`).classList.add('hide-caret');
                }
            }
            let name = current_state.split("-").length == 1 ? current_state.split("-")[0] : current_state.split("-")[1];
            let finalName = name.split("State")[0];
            //console.log("Final name : " + finalName);
            //console.log(finalName);
            if (finalName == "toclose") {
                document.getElementById("status-text").innerHTML = "(To Close)";
            } else {
                document.getElementById("status-text").innerHTML = `(${finalName.charAt(0).toUpperCase() + finalName.slice(1)})`;
            }
            var statusName = localStorage.getItem("status").charAt(0).toUpperCase();
            document.getElementById("loader2").style.display = "flex";
            $.ajax({
                url: `/Admin/${finalName.charAt(0).toUpperCase() + finalName.slice(1)}`,
                type: 'POST',
                dataType: 'html',
                data: { status: statusName, page: 1, pageSize: 10 },
                // Pass your data here
                success: function (response) {
                    document.getElementById("loader2").style.display = "none";
                    $("#AdminDashboardPartialView").html(response);

                },
                error: function (xhr, status, error) {
                    if (xhr.status === 401) {
                        location.reload();
                    }
                    console.log(error);
                }
            });

        }


        // code to add/remove class during filtering in admin dashboard
        const changeFilter = (element) => {
            const states = document.getElementsByClassName("req-filter");
            const curr_state = element.classList[1];

            const statesName = document.getElementsByClassName("state");
            const current_state = element.classList[1];

            for (let i = 0; i < states.length; i++) {
                if (states[i].classList.length == 11 && states[i].classList[1] == curr_state) {
                    break;
                }
                else if (states[i].classList[1] == curr_state) {
                    states[i].classList.add('filter-active');
                    states[i].classList.remove('border-white');
                    states[i].classList.add('border-dark-subtle');
                }
                else if (states[i].classList.length == 11) {
                    states[i].classList.remove('filter-active');
                    states[i].classList.add('border-white');
                    states[i].classList.remove('border-dark-subtle');
                }
            }

            filter(1, 10);
        }

        // code to show filtered data
        const filter = (page, pageSize) => {
            localStorage.setItem("status", document.getElementById("status-text").innerHTML.substring(1, document.getElementById("status-text").innerHTML.length - 1));

            var statusName = localStorage.getItem("status").charAt(0).toUpperCase();
            const states = document.getElementsByClassName("req-filter");

            for (let i = 0; i < states.length; i++) {
                if (states[i].classList.length == 11) {
                    $.ajax({
                        url: `/Admin/${document.getElementById("status-text").innerHTML.substring(1, document.getElementById("status-text").innerHTML.length - 1)}`,
                        type: 'POST',
                        dataType: 'html',
                        data: { status: statusName, search: document.getElementById("search").value, region: document.getElementById("region").value, requestor: states[i].classList[1], page: page, pageSize: pageSize },

                        success: function (response) {
                            $("#AdminDashboardPartialView").html(response);

                        },

                        error: function (xhr, status, error) {
                            if (xhr.status === 401) {
                                location.reload();
                            }
                            console.log(error);
                        }
                    });
                }
            }


        }

        // code to apply filter when we change the value of region dropdown
        document.getElementById("region").addEventListener("change", function () {
            filter(this);
        });

        window.onload = () => {
            var role = `@Model.an.roleName`;
            console.log(role);
            if (role == "Provider") {
                var lat = '';
                var long = '';
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function (position) {
                        lat = position.coords.latitude;
                        long = position.coords.longitude;
                        console.log("Lat: " + lat);
                        console.log("Long: " + long);

                        $.ajax({
                            url: '/Admin/UpdateProviderLocation',
                            type: 'POST',
                            data: { lat: lat, lon: long },
                            success: function (response) {
                                console.log("hello");
                            },
                            error: function (xhr, status, error) {
                                if (xhr.status === 401) {
                                    location.reload();
                                }
                                console.log(error);
                            }
                        });
                    });


                }
                else {
                    alert("Location not supported");
                }
            }


            //var className = localStorage.getItem("status").toLowerCase();
            //className = className.charAt(0).toUpperCase();
            //console.log("Class name:" + className);
            if (localStorage.getItem("status") == null) {
                console.log("1");
                designStatus("new");
                $.ajax({
                    url: `/Admin/New`,
                    type: 'POST',
                    dataType: 'html',
                    data: { status: "New", page: 1, pageSize: 10 },
                    // Pass your data here
                    success: function (response) {
                        console.log("Success response of New");
                        $("#AdminDashboardPartialView").html(response);

                    },
                    error: function (xhr, status, error) {
                        if (xhr.status === 401) {
                            location.reload();
                        }
                        console.log(error);
                    }
                });
            }
            else {
                var className = localStorage.getItem("status").toLowerCase();
                console.log(className);
                console.log("2");
                designStatus(localStorage.getItem("status").toLowerCase());
                var classNameUpperCase = className.charAt(0).toUpperCase() + className.slice(1);
                console.log("Class : " + classNameUpperCase);
                //console.log(localStorage.getItem("status").toLowerCase())
                $.ajax({
                    url: `/Admin/${classNameUpperCase}`,
                    type: 'POST',
                    dataType: 'html',

                    // Pass your data here
                    success: function (response) {

                        //console.log(response);
                        $("#AdminDashboardPartialView").html(response)
                    },
                    error: function (xhr, status, error) {
                        if (xhr.status === 401) {
                            location.reload();
                        }
                        console.log(error);
                    }
                });
            }
        }


        // code to fetch Patient Name and RequestId in Cancel Case Modal
        function cancelCaseData(id, fname, lname) {
            document.getElementById("p-name").textContent = fname + " " + lname;
            document.getElementById("p-name-two").textContent = fname + " " + lname;
            document.getElementById("r-id").value = id;
            document.getElementById("r-id-three").value = id;
            $("#exampleModal").modal('show');
        }

        function cancelCaseDataTwo(id, fname, lname) {
            document.getElementById("p-name").textContent = fname + " " + lname;
            document.getElementById("p-name-two").textContent = fname + " " + lname;
            document.getElementById("r-id").value = id;
            document.getElementById("r-id-three").value = id;
            $("#example3Modal").modal('show');
        }

        // code to fetch RequestId in Assign Case Modal
        function assignCaseData(id) {
            document.getElementById("r-id-two").value = id;
            $("#example2Modal").modal('show');
        }

        //when we change the value of dropdown of region, this function will be called
        function fetchRegionData() {
            //this stores the RegionId of a region which is selected because here we have used select-region id (id of select tag) and fetched the value so whatever we are storing in the value of region dropdown will be fetched i.e. RegionId
            const selectedRegionId = document.getElementById("select-region").value;

            $.ajax({
                url: '/Admin/GetPhysicianByRegion',
                type: 'GET',
                // stores RegionId in regionId variable and this variable is passed to the controller
                data: { regionId: selectedRegionId },
                success: function (data) {
                    console.log("Success");
                    // to remove the previously present physicians selected based on a different region
                    $("#select-physician").empty();
                    $("#select-physician").append('<option value="" disabled selected>Select Physician</option>');

                    // Add each matched physician to the select element
                    $.each(data, function (index, physician) {
                        console.log(physician);
                        $("#select-physician").append('<option class="physician-dropdown" value="' + physician.physicianId + '">' + physician.firstName + '</option>');
                    });
                },

                error: function (error) {
                    console.error("Error fetching data:", error);
                }
            });
        }

        //when we change the value of dropdown of region, this function will be called
        function fetchRegionData2() {
            //this stores the RegionId of a region which is selected because here we have used select-region id (id of select tag) and fetched the value so whatever we are storing in the value of region dropdown will be fetched i.e. RegionId
            const selectedRegionId = document.getElementById("select-region-for-transfer").value;

            $.ajax({
                url: '/Admin/GetPhysicianByRegion',
                type: 'GET',
                // stores RegionId in regionId variable and this variable is passed to the controller
                data: { regionId: selectedRegionId },
                success: function (data) {
                    // to remove the previously present physicians selected based on a different region
                    $("#select-physician2").empty();
                    $("#select-physician2").append('<option value="" disabled selected>Select Physician</option>');

                    // Add each matched physician to the select element
                    $.each(data, function (index, physician) {
                        console.log(physician);
                        $("#select-physician2").append('<option class="physician-dropdown" value="' + physician.physicianId + '">' + physician.firstName + '</option>');
                    });
                },

                error: function (error) {
                    console.error("Error fetching data:", error);
                }
            });
        }

        // code to fetch RequestId in Transfer Case Modal
        function transferRequestData(id) {
            document.getElementById("r-id-four").value = id;
            $('#example9Modal').modal({ backdrop: 'static', keyboard: false }, 'show');
        }

        // code to fetch RequestId in Clear Case Modal
        function clearCaseData(id) {
            document.getElementById("r-id-five").value = id;
            $("#example10Modal").modal('show');
        }

        // code to fetch RequestId in Accept Case Modal
        function acceptCaseData(id) {
            console.log(id);
            document.getElementById("r-id-six").value = id;
            console.log(document.getElementById("r-id-six").value);
            $("#acceptCaseModal").modal('show');
        }

        // code to fetch RequestId in Transfer Modal
        function transferData(id) {
            console.log(id);
            document.getElementById("r-id-seven").value = id;
            $("#providerTransferModal").modal('show');
        }

        // code to fetch RequestId in Type of Call Modal
        function typeOfCallData(id) {
            console.log(id);
            document.getElementById("r-id-eight").value = id;
            $("#typeOfCareModal").modal('show');
        }

        // code to fetch requestId in download encoutner form modal
        function downloadEncounterForm(id) {
            console.log(id);
            document.getElementById("r-id-nine").value = id;
            var name = document.getElementById("pdf");
            name.href = `/EncounterForms/patient-${id}.pdf`;
            $("#DownloadEncounterModal").modal('show');
        }

        // code to fetch PhoneNumber, Receiver Email, RequestTypeId and RequestId in Send Agreement Modal
        function sendAgreementData(id, typeId, mail, num) {
            document.getElementById("phoneForAgree").value = num;
            document.getElementById("emailForAgree").value = mail;
            document.getElementById("r-type-id-two").value = typeId;
            document.getElementById("r-id-for-agree").value = id;
            var x = document.getElementById("r-id-for-agree").value;

            const rtid = document.getElementById("r-type-id-two").value;
            const rid = document.getElementById("r-id-for-agree").value;
            if (rtid == 1) {
                document.getElementById("patient-data").style.display = "flex";
                document.getElementById("family-data").style.display = "none";
                document.getElementById("concierge-data").style.display = "none";
                document.getElementById("business-data").style.display = "none";
            }
            else if (rtid == 2) {
                document.getElementById("patient-data").style.display = "none";
                document.getElementById("family-data").style.display = "flex";
                document.getElementById("concierge-data").style.display = "none";
                document.getElementById("business-data").style.display = "none";
            }
            else if (rtid == 3) {
                document.getElementById("patient-data").style.display = "none";
                document.getElementById("family-data").style.display = "none";
                document.getElementById("concierge-data").style.display = "flex";
                document.getElementById("business-data").style.display = "none";
            }
            else {
                document.getElementById("patient-data").style.display = "none";
                document.getElementById("family-data").style.display = "none";
                document.getElementById("concierge-data").style.display = "none";
                document.getElementById("business-data").style.display = "flex";
            }

            $("#SendAgreementModal").modal('show');
        }

        // code to show dropdown in phone number field of
        //const phoneInputField = document.querySelector("#phone");
        //const phoneInput = window.intlTelInput(phoneInputField, {
        //    innerHeight: 1,
        //    utilsScript:
        //        "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
        //});

        const sendLinkPhone = document.querySelector("#slphone");
        const phone1 = window.intlTelInput(sendLinkPhone, {
            innerHeight: 1,
            utilsScript:
                "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
        });

        function downloadSpecificExcel() {
            document.getElementById("submit-button-for-excel").click();
        }

        //function validateForm() {
        //    const region = document.getElementById("select-region").value;
        //    const phys = document.getElementById("select-physician").value;
        //    console.log(region);
        //    let flag = 0

        //    if(region==-1)
        //    {
        //        console.log(region);
        //        document.getElementById("regionError").innerHTML = "Please select alteast one region!";
        //        document.getElementById("regionError").style.display = "block";
        //        event.preventDefault();
        //        return false;
        //    }

        //    if (phys<0)
        //    {
        //        document.getElementById("physicianError").innerHTML = "Please select a physician";
        //        document.getElementById("physicianError").style.display = "block";
        //        event.preventDefault();
        //        return false;
        //    }

        //    if(region!=-1)
        //    {
        //        document.getElementById("regionError").innerHTML = "";
        //        document.getElementById("regionError").style.display = "none";
        //    }
        //}

        function checkTransfer() {
            const region = document.getElementById("select-region-for-transfer").value;
            const phys = document.getElementById("select-physician2").value;
            console.log(region);
            let flag = 0
            console.log("Phy: " + phys);
            if (region == -1) {
                console.log(region);
                document.getElementById("regionError2").innerHTML = "Please select alteast one region!";
                document.getElementById("regionError2").style.display = "block";
                event.preventDefault();
                return false;
            }

            if (phys == null) {
                document.getElementById("physicianError2").innerHTML = "Please select a physician";
                document.getElementById("physicianError2").style.display = "block";
                event.preventDefault();
                return false;
            }

            if (region != -1) {
                document.getElementById("regionError2").innerHTML = "";
                document.getElementById("regionError2").style.display = "none";
            }
        }

        function transferValidation() {
            console.log("dsdsd");
            var desc = document.getElementById("transferDesc").value;
            if (desc == "") {
                document.getElementById("descError").style.display = "block";
                return false;
            }
            else {
                document.getElementById("descError").style.display = "none";
            }
            return true;
        }

        function validateAndSubmit() {
            console.log("hohoh");
            var houseCallChecked = document.getElementById("Housecall-outlined").checked;
            var consultChecked = document.getElementById("info-outlined").checked;

            console.log(houseCallChecked);
            console.log(consultChecked);
            if (!houseCallChecked && !consultChecked) {
                document.getElementById("typeOfCareError").style.display = "block";
                return false;
            } else {
                document.getElementById("typeOfCareError").style.display = "none";
            }
            return true;
        }

        function checkCancelCase() {
            var reason = document.getElementById("reason").value;
            console.log(reason);
            if (reason == -1) {
                console.log("if");
                document.getElementById("caseTagError").innerHTML = "Please select a reason for cancelling the case";
                document.getElementById("caseTagError").style.display = "block";
                event.preventDefault();
                return false;
            }
            else {
                console.log("else");
                document.getElementById("caseTagError").innerHTML = "";
                document.getElementById("caseTagError").style.display = "none";
            }
            return true;
        }

        function checkBlockCase() {
            var reason = document.getElementById("blockReason").value;

            if (reason == null || reason == "") {
                console.log("if");
                document.getElementById("blockError").innerHTML = "Please enter reason to block the case";
                document.getElementById("blockError").style.display = "block";
                event.preventDefault();
                return false;
            }
            else {
                console.log("else");
                document.getElementById("blockError").innerHTML = "";
                document.getElementById("blockError").style.display = "none";
            }
            return true;
        }

        function checkDTY() {
            var x = document.getElementById("reasonDTY").value;

            if (x == null || x == "") {
                console.log("if");
                document.getElementById("dtyError").innerHTML = "Please enter reason for which support is needed";
                document.getElementById("dtyError").style.display = "block";
                event.preventDefault();
                return false;
            }
            else {
                console.log("else");
                document.getElementById("dtyError").innerHTML = "";
                document.getElementById("dtyError").style.display = "none";
            }
            return true;
        }

        function resetFormInputs() {
            // make values empty of fields in Cancel Case Modal
            document.getElementById("reason").value = "-1";
            document.getElementById("exampleFormControlTextarea1").value = "";

            // make values empty of fields in Assign Case Modal
            console.log("assign case");
            document.getElementById("select-region").value = -1;
            document.getElementById("select-physician").value = -1;
            console.log(document.getElementById("select-region").value);
            console.log(document.getElementById("select-physician").value);


            // make values empty of fields of Transfer Case Modal
            document.getElementById("select-region-for-transfer").value = -1;
            document.getElementById("select-physician2").value = -1;
            document.getElementById("exampleFormControlTextarea1").value = "";

            // make values empty of fields of Block Case Modal
            document.getElementById("blockReason").value = "";

            // make values empty of fields of Send Agreement Modal
            document.getElementById("phoneForAgree").value = "";
            document.getElementById("emailForAgree").value = "";

            // make values empty of fields of Request DTY Modal
            document.getElementById("reasonDTY").value = "";

            // make values empty of fields of Provider Transfer Request Modal
            document.getElementById("transferDesc").value = "";
        }

        // this method gets triggered when modal is about to be hidden
        $('#exampleModal').on('hide.bs.modal', function (e) {
            // call to the function which resets the inputs
            console.log("hide bs modal call");
            resetFormInputs();
        });

        $('#example2Modal').on('hide.bs.modal', function (e) {
            resetFormInputs();
        });

        $('#example9Modal').on('hide.bs.modal', function (e) {
            resetFormInputs();
        });

        $('#example3Modal').on('hide.bs.modal', function (e) {
            resetFormInputs();
        });

        $("#SendAgreementModal").on('hide.bs.modal', function (e) {
            resetFormInputs();
        });

        $("#requestSupportModal").on('hide.bs.modal', function (e) {
            resetFormInputs();
        });

        $("#providerTransferModal").on('hide.bs.modal', function (e) {
            resetFormInputs();
        });


        var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
        var loggedInUser, lastUser, lastTime, uniqueId, receiverRoleName;

        connection.on("ReceiveMessage", function (senderId, requestId, user, message, isAdmin) {
            console.log(senderId, requestId, user, message);
            let senderName = user;

            const messagesList = document.getElementById(`messagesList${uniqueId}`);
            // create new element to show message in it
            const listItem = document.createElement("li");
            // get current time
            const currentTime = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
            listItem.classList.add("chat-message");

            if (message.length > 19) {
                listItem.style.width = "50%";
            }
            listItem.style.wordWrap = "break-word";
            listItem.classList.add("d-block");
            const checkName = document.getElementById("navbarName").innerText;
            console.log("User: " + senderName);
            console.log("Check name: " + checkName);
            listItem.classList.add(senderName === checkName ? "outgoing" : "incoming");
            listItem.classList.add("mt-2");
            listItem.textContent = `${message}`;


            // create element to show username and time or only time
            const userName = document.createElement("small");
            if (senderName == loggedInUser) {
                userName.textContent = `${currentTime}`;
            }
            else {
                userName.textContent = `${senderName}, ${currentTime}`;
            }
            console.log(userName.textContent);
            userName.classList.add("d-block");
            userName.style.fontSize = "12px";
            userName.classList.add("text-muted");
            userName.classList.add(senderName === checkName ? "timeOnRight" : "timeOnLeft");
            userName.classList.add("mt-2");


            // show username and time if user who has sent the message is not same as the logged in user OR message sent time is not equal to current time
            if (lastUser != senderName || lastTime != currentTime) {
                messagesList.appendChild(userName);
            }
            messagesList.appendChild(listItem);
            scrollToBottom();
            lastUser = user;
            lastTime = currentTime;
            //uniqueId = id;
        });

        connection.start().catch(err => console.error(err.toString()));

        function ViewMessage(aspId, reqId,role,num) {
            console.log(reqId);
            console.log(aspId);
            var user = document.getElementById("navbarName").innerText;
            var message = document.getElementById(`messageInput${aspId}-${reqId}-${role}${num}`).value;
            console.log(message);
            loggedInUser = user;
            uniqueId = aspId;
            //user = user + "#" + aspId;
            if (message != '') {
                connection.invoke("SendMessage", aspId, reqId, user, message, receiverRoleName)
                    .then(() => {
                        const listItem = document.createElement("li");
                        listItem.classList.add("chat-message");
                        listItem.classList.add("d-block");
                        listItem.classList.add("outgoing");
                        listItem.textContent = message;
                        const currentTime = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

                        const userName = document.createElement("small");
                        const messagesList = document.getElementById(`messagesList${aspId}`);
                        userName.classList.add("d-block");
                        userName.style.fontSize = "12px";
                        userName.classList.add("text-muted");
                        userName.classList.add("timeOnRight");
                        userName.textContent = `${loggedInUser}`;
                        scrollToBottom();
                        messagesList.appendChild(userName);
                        messagesList.appendChild(listItem);
                    })
                    .catch(err => console.error(err.toString()));
                document.getElementById(`messageInput${aspId}-${reqId}-${role}${num}`).value = "";
            }
        }

        function checkEnterButton(event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                document.getElementById(`sendMessageButton${uniqueId}`).click();
            }
        }

        function scrollToBottom() {
            let messages = document.getElementById('ChatContainer');
            messages.scrollTop = messages.scrollHeight;
        }

        function setRecevierId(id, role) {
            uniqueId = id;
            receiverRoleName = role;
        }

    </script>
</div>